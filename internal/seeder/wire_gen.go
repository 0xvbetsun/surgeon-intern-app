// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package seeder

import (
	"context"
	"github.com/vbetsun/surgeon-intern-app/internal/pkg/db"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/OrganizationalUnits"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/activities"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/assessments"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/clinics"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/dbexecutor"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/evaluationforms"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/examinationactivity"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/examinations"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/examinationsactivitiesreviews"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/examinationsactivityreview"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/hospitals"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/logbookentries"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/notifications"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/ogbook"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/organisations"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/orthopedicSurgeries"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/practicalactivitytypes"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/procedures"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/roles"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/specialties"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/surgeries"
	"github.com/vbetsun/surgeon-intern-app/pkg/repo/users"
)

// Injectors from wire.go:

func InitializeSeeder(ctx context.Context, pgConnectionParameters db.ConnectionParameters) (*Seeder, error) {
	postgresql, err := db.NewSqlConnection(pgConnectionParameters)
	if err != nil {
		return nil, err
	}
	sqlDB := postgresql.Conn
	iActivitiesRepo := activities.NewActivitiesRepo(sqlDB)
	iLogbookEntriesRepo := logbookentries.NewLogbookEntriesRepo(sqlDB)
	iAssessmentsRepo := assessments.NewAssessmentsRepo(sqlDB)
	iRepo := specialties.NewRepo(sqlDB)
	practicalactivitytypesIRepo := practicalactivitytypes.NewRepo(sqlDB, iRepo)
	proceduresIRepo := procedures.NewRepo(sqlDB)
	examinationsIRepo := examinations.NewRepo(sqlDB)
	typesRepo := OrganizationalUnits.NewTypesRepo(sqlDB)
	hospitalsIRepo := hospitals.NewRepo(sqlDB, typesRepo)
	clinicsIRepo := clinics.NewRepo(sqlDB, typesRepo)
	iGetter := organisations.NewGetter(sqlDB, ctx)
	iUpdater := organisations.NewUpdater()
	iAdder := organisations.NewAdder(sqlDB, ctx)
	iDeleter := organisations.NewDeleter()
	repo := organisations.NewRepo(iGetter, iUpdater, iAdder, iDeleter)
	userOrganizationalUnitRoleRepo := users.NewUserOrganizationalUnitRoleRepo(sqlDB)
	rolesIRepo := roles.NewRepo(sqlDB)
	usersIRepo := users.NewRepo(sqlDB, userOrganizationalUnitRoleRepo, rolesIRepo)
	examinationactivityIRepo := examinationactivity.NewRepo(sqlDB)
	examinationsactivityreviewIRepo := examinationsactivityreview.NewRepo(sqlDB)
	examinationsactivitiesreviewsIRepo := examinationsactivitiesreviews.NewRepo(sqlDB)
	orthopedicSurgeriesIActivitiesRepo := orthopedicSurgeries.NewActivitiesRepo(sqlDB)
	iReviewsRepo := orthopedicSurgeries.NewReviewsRepo(sqlDB)
	orthopedicSurgeriesRepo := orthopedicSurgeries.NewRepo(orthopedicSurgeriesIActivitiesRepo, iReviewsRepo)
	surgeriesIRepo := surgeries.NewRepo(sqlDB)
	idbExecutor := dbexecutor.NewDBExecutor(sqlDB)
	iEvaluationFormsRepo := evaluationforms.NewEvaluationFormsRepo(sqlDB)
	iDopsRepo := evaluationforms.NewDopsRepo(sqlDB)
	iMiniCexRepo := evaluationforms.NewMiniCexRepo(sqlDB)
	evaluationformsRepo := evaluationforms.NewRepo(iEvaluationFormsRepo, iDopsRepo, iMiniCexRepo)
	iNotificationsRepo := notifications.NewNotificationsRepo(sqlDB)
	organizationalUnitsRepo := OrganizationalUnits.NewRepo(sqlDB)
	ogbookRepo := ogbook.NewRepo(iActivitiesRepo, iLogbookEntriesRepo, iAssessmentsRepo, practicalactivitytypesIRepo, proceduresIRepo, examinationsIRepo, hospitalsIRepo, clinicsIRepo, repo, usersIRepo, examinationactivityIRepo, examinationsactivityreviewIRepo, examinationsactivitiesreviewsIRepo, orthopedicSurgeriesRepo, surgeriesIRepo, idbExecutor, rolesIRepo, iRepo, evaluationformsRepo, iNotificationsRepo, typesRepo, userOrganizationalUnitRoleRepo, organizationalUnitsRepo)
	seeder := New(ogbookRepo)
	return seeder, nil
}
