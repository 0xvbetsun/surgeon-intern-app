// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	authorization2 "github.com/vbetsun/surgeon-intern-app/internal/pkg/services/authorization"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// Authorize provides a mock function with given fields: requests, permissive
func (_m *IService) Authorize(requests []authorization2.CasbinRequest, permissive bool) (bool, error) {
	ret := _m.Called(requests, permissive)

	var r0 bool
	if rf, ok := ret.Get(0).(func([]authorization2.CasbinRequest, bool) bool); ok {
		r0 = rf(requests, permissive)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]authorization2.CasbinRequest, bool) error); ok {
		r1 = rf(requests, permissive)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UserIsSuperAdmin provides a mock function with given fields: userID
func (_m *IService) UserIsSuperAdmin(userID string) bool {
	ret := _m.Called(userID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(userID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
